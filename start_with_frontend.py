#!/usr/bin/env python3
# start_with_frontend.py

import os
import threading
import time
from http.server import HTTPServer, SimpleHTTPRequestHandler

# ====== –ù–ê–°–¢–†–û–ô–ö–ò ======
API_PORT = 8000
FRONTEND_PORT = 3000
SERVER_IP = "34.28.187.161"  # –í–Ω–µ—à–Ω–∏–π IP —Ç–≤–æ–µ–π VM
# =======================

def start_frontend_server(port):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ HTTP —Å–µ—Ä–≤–µ—Ä"""
    class FrontendHandler(SimpleHTTPRequestHandler):
        def log_message(self, format, *args):
            pass  # –ü–æ–¥–∞–≤–ª—è–µ–º –ª–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞

    try:
        httpd = HTTPServer(('0.0.0.0', port), FrontendHandler)
        print(f"üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://{SERVER_IP}:{port}")
        httpd.serve_forever()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä–∞: {e}")

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ Currency Exchange API —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º...")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
    required_files = ['frontend.html', 'myServer.py']
    missing_files = [f for f in required_files if not os.path.exists(f)]
    if missing_files:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:")
        for file in missing_files:
            print(f"  - {file}")
        return

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    try:
        from database_setup import init_database
        init_database()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    except ImportError:
        print("‚ö†Ô∏è –ú–æ–¥—É–ª—å database_setup –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –ë–î —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–æ–≤
    def is_port_available(port):
        import socket
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            try:
                s.bind(('', port))
                return True
            except OSError:
                return False

    if not is_port_available(API_PORT):
        print(f"‚ùå –ü–æ—Ä—Ç {API_PORT} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è")
        return
    if not is_port_available(FRONTEND_PORT):
        print(f"‚ùå –ü–æ—Ä—Ç {FRONTEND_PORT} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è")
        return

    print(f"üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ—Ä—Ç—ã:")
    print(f"  API —Å–µ—Ä–≤–µ—Ä: {API_PORT}")
    print(f"  –§—Ä–æ–Ω—Ç–µ–Ω–¥:   {FRONTEND_PORT}")

    # –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(
        target=start_frontend_server,
        args=(FRONTEND_PORT,),
        daemon=True
    ).start()

    time.sleep(2)  # –¥–∞—ë–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É —Å—Ç–∞—Ä—Ç–∞–Ω—É—Ç—å

    print("\nüìã –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:")
    print(f"üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://{SERVER_IP}:{FRONTEND_PORT}/frontend.html")
    print(f"üîß API:      http://{SERVER_IP}:{API_PORT}")
    print(f"üìä –í–∞–ª—é—Ç—ã:   http://{SERVER_IP}:{API_PORT}/currencies")
    print(f"üí± –ö—É—Ä—Å—ã:    http://{SERVER_IP}:{API_PORT}/exchangeRates")
    print("\nüí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 50)

    # –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞
    try:
        import myServer
        # –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —É–±–µ–¥–∏—Å—å, —á—Ç–æ –≤ myServer.py:
        # server_address = ("0.0.0.0", 8000)
        myServer.run()
    except ImportError as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å myServer.py: {e}")
    except KeyboardInterrupt:
        print("\nüëã –°–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

if __name__ == '__main__':
    main()
